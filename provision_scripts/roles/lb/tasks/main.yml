---
  - name: "Create bucket {{ app_name }}-logs"
    aws_s3:
      bucket: "{{ app_name }}-logs"
      permission: private
      mode: create
  - name: "Add s3 bucket policy for lb"
    command: "aws s3api put-bucket-policy --bucket {{ app_name }}-logs --policy \'{{ lookup('template', 'lb_policy.json') | to_nice_json}}\'"
  - name: "Create security group for lb"
    ec2_group:
      name: "{{ app_name }}_public_http"
      vpc_id: "{{ vpc_id }}"
      description: "Group to use for public http access in {{ vpc_id }}"
      rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
    register: public_http_group
  - name: "Set fact with load balancer name {{ app_name}}"
    set_fact:
      lb_name: "{{app_name}}-lb"
      lb_target_group_name: "{{ app_name }}-target-group"
  - name: Create LB target group
    elb_target_group:
      name: "{{app_name}}-target-group"
      protocol: http
      port: 80
      vpc_id: "{{ vpc_id }}"
      health_check_path: "/status/ping"
      successful_response_codes: "200"
      health_check_interval: "{{ lb_check_interval }}"
      state: present
    register: elb_tg
  - name: "Set fact with lb target group arn"
    set_fact:
      lb_target_group_arn: "{{ elb_tg.target_group_arn }}"
  - name: "Create lb configuration - {{ app_name }}"
    elb_application_lb:
      access_logs_enabled: yes
      access_logs_s3_bucket: "{{ app_name }}-logs"
      access_logs_s3_prefix: "lb"
      name: "{{ lb_name }}"
      security_groups:
        - "{{ public_http_group.group_id }}"
      subnets: "{{ vpc_subnets_ids }}"
      listeners:
        - Protocol: HTTP
          Port: 80
          DefaultActions:
            - Type: forward
              TargetGroupName: "{{ lb_target_group_name }}"
      state: present

