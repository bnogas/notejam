- hosts: localhost
  gather_facts: false
  vars:
    aws_cicd_username: "notejam_cicd"
    aws_access_key: "{{ lookup('env', 'AWS_ADMIN_ACCESS_KEY') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_ADMIN_SECRET_KEY') }}"
    aws_account_id: "{{ lookup('env', 'AWS_ACCOUNT_ID') }}"
    aws_region: "{{ lookup('env', 'AWS_REGION') }}"

  tasks:
  - name: Create CICD user
    iam:
      iam_type: user
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      name: "{{ aws_cicd_username }}"
      state: present
      access_key_state: create
    register: credentials
  - name: Attach EC2 policy
    shell: 'export AWS_ACCESS_KEY_ID="{{ aws_access_key }}"; export AWS_SECRET_ACCESS_KEY="{{ aws_secret_key }}"; aws iam attach-user-policy --user-name "{{ aws_cicd_username }}" --policy-arn "{{ item }}"'
    with_items:
     - "arn:aws:iam::aws:policy/AmazonEC2FullAccess"
     - "arn:aws:iam::aws:policy/AWSCodePipelineFullAccess"
  - name: Create ECR repository
    ecs_ecr:
      name: notejam
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
  - name: Create role for codebuild
    iam_role:
      name: notejam-codebuild-role
      state: present
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      assume_role_policy_document: |
        {
            "Version": "2008-10-17",
            "Statement": [
                {
                    "Action": "sts:AssumeRole",
                    "Principal": {
                        "Service": "codebuild.amazonaws.com"
                    },
                    "Effect": "Allow",
                    "Sid": "1"
                }
            ]
        }
      managed_policy:
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryPowerUser
  - name: Grant permissions to notejam-codebuild-role
    iam_policy:
      iam_type: role
      iam_name: notejam-codebuild-role
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      policy_name: notejam-codebuild-policy
      state: present
      policy_json: "{{ lookup( 'template', 'files/codebuild_policy.json') }}"
  - name: Create role for codepipeline
    iam_role:
      name: notejam-codepipeline-role
      state: present
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      assume_role_policy_document: |
        {
            "Version": "2012-10-17",
            "Statement": [
                {
                    "Action": "sts:AssumeRole",
                    "Principal": {
                        "Service": "codepipeline.amazonaws.com"
                    },
                    "Effect": "Allow",
                    "Sid": ""
                }
            ]
        }
  - name: Grant permission to notejam-codepieline-role
    iam_policy:
      iam_type: role
      iam_name: notejam-codepipeline-role
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      policy_name: notejam-codepipeline-policy
      state: present
      policy_document: files/codepipeline_policy.json
  - name: Create notejam ecs cluster
    ecs_cluster:
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      name: notejam_ecs
      state: present
  - name: Create ecs task definition
    ecs_taskdefinition:
      family: notejam-web
      state: present
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      containers:
      - name: notejam-web
        cpu: 10
        essential: true
        image: "{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com/notejam:latest"
        memory: 100
        portMappings:
        - containerPort: 8000
          hostPort: 80
  - name: Create notejam service
    ecs_service:
      name: notejam_ecs_svc
      state: present
      aws_access_key: "{{ aws_access_key }}"
      aws_secret_key: "{{ aws_secret_key }}"
      cluster: notejam_ecs
      desired_count: 0
      task_definition: notejam-web

